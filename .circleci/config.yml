# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2.o
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.4.1-node-browsers
         environment:
           PGHOST: localhost
           PGUSER: alc_fans
           RAILS_ENV: test
           CC_TEST_REPORTER_ID: ${CC_TEST_REPORTER_ID}

       - image: postgres:9.5
         environment:
           POSTGRES_USER: alc_fans
           POSTGRES_DB: alc_fans_test
           POSTGRES_PASSWORD: ""

    working_directory: ~/alc_fans

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name:  Download cc-test-reporter
          command: |
            mkdir -p tmp/
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > /tmp/cc-test-reporter
            chmod +x /tmp/cc-test-reporter

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:migrate
      - run: bundle exec rake db:schema:load

      # run tests!
      - run:
          name: run tests
          command: |
            ./tmp/cc-test-reporter before-build
            mkdir /tmp/test-results
            bundle exec rspec --out /tmp/test-results/rspec.xml spec
            ./tmp/cc-test-reporter after-build

      - run:
          name: Upload coverage results to Code Climate
          command: |
            /tmp/cc-test-reporter sum-coverage -p 1 -o /tmp/codeclimate.total.json tmp/codeclimate.*.json
            /tmp/cc-test-reporter upload-coverage -i /tmp/codeclimate.total.json
            sed -n -e 24p /tmp/codeclimate.total.json

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
